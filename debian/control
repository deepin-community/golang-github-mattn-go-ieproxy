Source: golang-github-mattn-go-ieproxy
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: Drew Parsons <dparsons@debian.org>
Section: devel
Testsuite: autopkgtest-pkg-go
Priority: optional
Build-Depends: debhelper-compat (= 13),
 dh-golang,
 golang-golang-x-net-dev,
 golang-golang-x-sys-dev
Build-Depends-Indep: golang-any
Standards-Version: 4.6.1
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-mattn-go-ieproxy
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-mattn-go-ieproxy.git
Homepage: https://github.com/mattn/go-ieproxy
Rules-Requires-Root: no
XS-Go-Import-Path: github.com/mattn/go-ieproxy

Package: golang-github-mattn-go-ieproxy-dev
Architecture: all
Multi-Arch: foreign
Depends: ${misc:Depends}
Description: Go package to detect the proxy settings on Windows platform (library)
 ieproxy Go package to detect the proxy settings on Windows platform.
 .
 The settings are initially attempted to be
 read from the WinHttpGetIEProxyConfigForCurrentUser DLL call
 (https://docs.microsoft.com/en-us/windows/desktop/api/winhttp/nf-winhttp-winhttpgetieproxyconfigforcurrentuser),
 but falls back to the registry
 (CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings)
 in the event the DLL call fails.
 .
 For more information, take a look at the documentation
 (https://godoc.org/github.com/mattn/go-ieproxy) Methods You can either
 obtain a net/http compatible proxy function using ieproxy.GetProxyFunc(),
 set environment variables using ieproxy.OverrideEnvWithStaticProxy()
 (though no automatic configuration is available this way), or obtain
 the proxy settings via ieproxy.GetConf().
